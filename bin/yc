#!/usr/bin/env php
<?php
declare(strict_types = 1);
/**
 * Contains Yapeal Console.
 *
 * PHP version 7.0+
 *
 * LICENSE:
 * This file is part of Yet Another Php Eve Api Library also know as Yapeal
 * which can be used to access the Eve Online API data and place it into a
 * database.
 * Copyright (C) 2014-2017 Michael Cummings
 *
 * This program is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as published by the
 * Free Software Foundation, either version 3 of the License, or (at your
 * option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License
 * for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program. If not, see
 * <http://spdx.org/licenses/LGPL-3.0.html>.
 *
 * You should be able to find a copy of this license in the LICENSE.md file. A
 * copy of the GNU GPL should also be available in the GNU-GPL.md file.
 *
 * @copyright 2014-2017 Michael Cummings
 * @license   LGPL-3.0+
 * @author    Michael Cummings <mgcummings@yahoo.com>
 */
require_once __DIR__ . '/bootstrap.php';
use Symfony\Component\Console\Application;
use Yapeal\Cli\Developer\EveApi\EveApiCreator;
use Yapeal\Cli\Network\NetworkCache;
use Yapeal\Cli\Schema\SchemaCreator;
use Yapeal\Cli\Schema\SchemaTimestamp;
use Yapeal\Cli\Schema\SchemaUpdater;
use Yapeal\Cli\Yapeal\YapealAutoMagic;
use Yapeal\Cli\Yapeal\YapealSetup;
use Yapeal\Configuration\Wiring;
use Yapeal\Container\Container;
use Yapeal\Container\ContainerInterface;

$dic = $dic ?? new Container();
if (!$dic instanceof ContainerInterface) {
    $dic = new Container();
}
(new Wiring($dic))->wireAll();
$application = new Application($dic['Yapeal.consoleName'], $dic['Yapeal.version']);
$application->addCommands([
    new EveApiCreator('Developer:EveApi:Creator', $dic),
    new NetworkCache('Network:Cache', $dic),
    new SchemaCreator('Schema:Creator', $dic),
    new SchemaTimestamp('Schema:TimeStamp'),
    new SchemaUpdater('Schema:Update', $dic),
    new YapealAutoMagic('Yapeal:AutoMagic', $dic),
    new YapealSetup('Yapeal:Setup', $dic)
]);
$application->setAutoExit($dic['Yapeal.consoleAutoExit']);
$application->setCatchExceptions($dic['Yapeal.consoleCatchExceptions']);
unset($dic, $gitVersion, $junk, $status, $version);
$application->run();
