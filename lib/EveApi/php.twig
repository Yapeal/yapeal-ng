<?php
/**
 * Contains class {{ className }}.
 *
 * PHP version 5.4
 *
 * LICENSE:
 * This file is part of Yet Another Php Eve Api Library also know as Yapeal
 * which can be used to access the Eve Online API data and place it into a
 * database.
 * Copyright (C) {{ "now"|date("Y", "GMT") }} Michael Cummings
 *
 * This program is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as published by the
 * Free Software Foundation, either version 3 of the License, or (at your
 * option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License
 * for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program. If not, see
 * <http://spdx.org/licenses/LGPL-3.0.html>.
 *
 * You should be able to find a copy of this license in the LICENSE.md file. A
 * copy of the GNU GPL should also be available in the GNU-GPL.md file.
 *
 * @copyright {{ "now"|date("Y", "GMT") }} Michael Cummings
 * @license   LGPL-3.0+
 * @author    Michael Cummings <mgcummings@yahoo.com>
 */
namespace {{ namespace }};

use Yapeal\Log\Logger;
use Yapeal\Sql\PreserverTrait;
use Yapeal\Xml\EveApiReadWriteInterface;

/**
 * Class {{ className }}
 */
class {{ className }} extends {{ sectionName|ucFirst }}Section
{
    use PreserverTrait;
    /**
     * Constructor
     */
    public function __construct()
    {
        $this->mask = {{ mask }};
        $this->preserveTos = [
            {% for tableName in tableNames %}'preserveTo{{ tableName|ucFirst }}'{% if not loop.last %}{{ ",\n            " }}{% else %}{{ "\n" }}{% endif %}{% endfor %}
        ];
    }
{% for tableName, table in tables %}
    /**
     * @param EveApiReadWriteInterface $data
     *
     * @return self Fluent interface.
     * @throws \LogicException
     */
    protected function preserveTo{{ tableName|ucFirst }}(EveApiReadWriteInterface $data)
    {
        $tableName = '{{ sectionName|lcFirst }}{{ tableName|ucFirst }}';
{% if hasOwner %}        $ownerID = $this->extractOwnerID($data->getEveApiArguments());{{ "\n" }}{% endif %}
        $sql = $this->getCsq()
            ->getDeleteFromTable{% if hasOwner %}WithOwnerID{% endif %}($tableName{% if hasOwner %}, $ownerID{% endif %});
        $this->getYem()
            ->triggerLogEvent('Yapeal.Log.log', Logger::DEBUG, 'sql - ' . $sql);
        $this->getPdo()
            ->exec($sql);
{% if table.attributes is defined %}
        $columnDefaults = [
            {% for name, value in table.attributes %}'{{ name }}' => {{ value }}{% if not loop.last %}{{ ",\n            " }}{% else %}{{ "\n" }}{% endif %}{% endfor %}
        ];
        $xPath = '//{{ table.xpath|lcFirst }}/row';
        $elements = (new \SimpleXMLElement($data->getEveApiXml()))->xpath($xPath);
        $this->attributePreserveData($elements, $columnDefaults, $tableName);
{% else %}
        $columnDefaults = [
            {% for name, value in table.values %}'{{ name }}' => {{ value }}{% if not loop.last %}{{ ",\n            " }}{% else %}{{ "\n" }}{% endif %}{% endfor %}
        ];
        $xPath = '//result/child::*[not(*|@*|self::dataTime)]';
        $elements = (new \SimpleXMLElement($data->getEveApiXml()))->xpath($xPath);
        $this->valuesPreserveData($elements, $columnDefaults, $tableName);
{% endif %}
        return $this;
    }
{% endfor %}
}
